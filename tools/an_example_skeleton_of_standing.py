
import numpy as np
import matplotlib.pyplot as plt


def get_joint(x, idx):
    px = x[2*idx]
    py = x[2*idx+1]
    return px, py


def set_joint(x, idx, px, py):
    x[2*idx] = px
    x[2*idx+1] = py
    return


def get_an_example_of_standing_skeleton():
    # data = [7, 67, 7041, "stand", "stand_03-08-20-24-55-587/00055.jpg", 0.5670731707317073, 0.11005434782608697, 0.5670731707317073, 0.18342391304347827, 0.5182926829268293, 0.1875, 0.5030487804878049, 0.27309782608695654, 0.5030487804878049, 0.34239130434782605, 0.6189024390243902, 0.18342391304347827, 0.6310975609756098, 0.2649456521739131, 0.6310975609756098, 0.3342391304347826, 0.5365853658536586,
    #         0.34646739130434784, 0.5335365853658537, 0.46467391304347827, 0.5335365853658537, 0.5747282608695652, 0.600609756097561, 0.34646739130434784, 0.600609756097561, 0.4565217391304348, 0.5945121951219512, 0.5665760869565217, 0.5579268292682927, 0.10190217391304347, 0.5762195121951219, 0.09782608695652173, 0.5426829268292683, 0.11005434782608697, 0.5884146341463414, 0.11005434782608697]
    data = [11, 164, 9508, "stand", "stand_03/1499.jpg", 0.4969512195121951, 0.1925951086956522, 0.5030487804878049,
     0.2292798913043478, 0.4725609756097561, 0.23233695652173914, 0.46646341463414637, 0.2781929347826087,
     0.4634146341463415, 0.3209918478260869, 0.5335365853658537, 0.2292798913043478, 0.5457317073170732,
     0.2781929347826087, 0.5457317073170732, 0.32404891304347827, 0.4847560975609756, 0.3179347826086956,
     0.49085365853658536, 0.3913043478260869, 0.5, 0.4555027173913044, 0.5213414634146342, 0.3179347826086956,
     0.524390243902439, 0.3913043478260869, 0.5213414634146342, 0.4585597826086956, 0.49085365853658536,
     0.18648097826086954, 0.5030487804878049, 0.18648097826086954, 0.4878048780487805, 0.1925951086956522,
     0.5152439024390244, 0.1925951086956522]

    # data = [13, 212, 11765, "walk", "walk_03/669.jpg", 0.43902439024390244, 0.15591032608695654, 0.4146341463414634, 0.17730978260869565, 0.39634146341463417, 0.18036684782608695, 0.3871951219512195, 0.22316576086956522, 0.3902439024390244, 0.25679347826086957, 0.4298780487804878, 0.17730978260869565, 0.4420731707317073, 0.21399456521739132, 0.45426829268292684, 0.24762228260869565, 0.40853658536585363, 0.25679347826086957, 0.4115853658536585, 0.3179347826086956, 0.3932926829268293, 0.3821331521739131, 0.4329268292682927, 0.25679347826086957, 0.4481707317073171, 0.3179347826086956, 0.4146341463414634, 0.37907608695652173, 0.43597560975609756, 0.15285326086956522, 0.0, 0.0, 0.4176829268292683, 0.15285326086956522, 0.0, 0.0]
    skeleton = np.array(data[5:])
    return skeleton


def get_a_normalized_standing_skeleton():
    x = get_an_example_of_standing_skeleton()

    NECK = 1
    L_THIGH = 8
    R_THIGH = 11

    # Remove offset by setting neck as origin
    x0, y0 = get_joint(x, NECK)
    x[::2] -= x0 # от каждой x координаты вычитается нулевая позиция (точка шеи) x0
    x[1::2] -= y0

    # Масштабируем скелет, принимая расстояние от шеи до бедер за высоту
    x0, y0 = get_joint(x, NECK) # обновленные координаты
    _, y11 = get_joint(x, L_THIGH) # поиск координаты левого бедра по y
    _, y12 = get_joint(x, R_THIGH) # поиск координаты левого бедра по y
    y1 = (y11 + y12) / 2 # рассчитываем между точками середину
    height = abs(y0 - y1) # расстояние от шеи до бедра
    x /= height # деление x на высоту скелета - масштабирование
    return x


def draw_skeleton_joints(skeleton):
    x = skeleton[::2]
    y = skeleton[1::2]
    plt.plot(-x, -y, "r*")
    plt.axis("equal")
    plt.show()


if __name__ == "__main__":
    skeleton = get_a_normalized_standing_skeleton()

    draw_skeleton_joints(skeleton)
